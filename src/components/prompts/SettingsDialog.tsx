
"use client";

import { useState, useEffect } from "react";
import { Button } from "@/components/ui/button";
import {
  Dialog,
  DialogContent,
  DialogHeader,
  DialogTitle,
  DialogFooter,
  DialogClose,
  DialogDescription,
} from "@/components/ui/dialog";
import { Input } from "@/components/ui/input";
import { Label } from "@/components/ui/label";
import { useToast } from "@/hooks/use-toast";
import { useUserPreferences } from "@/hooks/useUserPreferences";
import { ExternalLink, ClipboardCopy } from "lucide-react";
import { copyToClipboard } from "@/lib/utils";


interface SettingsDialogProps {
  isOpen: boolean;
  onClose: () => void;
}

export default function SettingsDialog({ isOpen, onClose }: SettingsDialogProps) {
  const { tampermonkeyUrl, saveTampermonkeyUrl, isLoaded } = useUserPreferences();
  const [currentUrl, setCurrentUrl] = useState('');
  const { toast } = useToast();

  useEffect(() => {
    if (isOpen && isLoaded) {
      setCurrentUrl(tampermonkeyUrl);
    }
  }, [isOpen, isLoaded, tampermonkeyUrl]);

  const handleSave = () => {
    saveTampermonkeyUrl(currentUrl);
    toast({
      title: "Settings Saved",
      description: "Your Tampermonkey URL has been updated.",
    });
    onClose();
  };

  const handleCopyToClipboard = () => {
    copyToClipboard(
        currentUrl,
        "Tampermonkey script edit URL copied.",
        "Failed to copy URL. Please try again.",
        toast
    );
  }

  return (
    <Dialog open={isOpen} onOpenChange={(open) => !open && onClose()}>
      <DialogContent className="sm:max-w-[625px]">
        <DialogHeader>
          <DialogTitle>Settings</DialogTitle>
          <DialogDescription>
            Manage your personal settings for Prompt Amplifier.
          </DialogDescription>
        </DialogHeader>
        <div className="grid gap-4 py-4">
          <div className="grid grid-cols-4 items-center gap-4">
            <Label htmlFor="tampermonkey-url" className="text-right">
              TM Script URL
            </Label>
            <div className="col-span-3 flex items-center gap-2">
                <Input
                id="tampermonkey-url"
                value={currentUrl}
                onChange={(e) => setCurrentUrl(e.target.value)}
                placeholder="Paste your Tampermonkey script URL here"
                />
                 {currentUrl && (
                    <>
                        <Button variant="outline" size="icon" title="Copy URL" onClick={handleCopyToClipboard}>
                            <ClipboardCopy className="h-4 w-4" />
                        </Button>
                        <Button variant="outline" size="icon" title="Open in new tab" asChild>
                            <a href={currentUrl} target="_blank" rel="noopener noreferrer">
                                <ExternalLink className="h-4 w-4" />
                            </a>
                        </Button>
                    </>
                )}
            </div>
          </div>
          <div className="col-span-4 pl-[calc(25%+1rem)] text-xs text-muted-foreground">
            <p>
              <strong>How to find this URL:</strong>
            </p>
            <ol className="list-decimal list-inside space-y-1 mt-1">
              <li>Open the Tampermonkey extension dashboard.</li>
              <li>Click on the script generated by this app.</li>
              <li>Copy the entire URL from your browser's address bar.</li>
            </ol>
          </div>
        </div>
        <DialogFooter>
          <DialogClose asChild>
            <Button type="button" variant="outline">
              Cancel
            </Button>
          </DialogClose>
          <Button type="submit" onClick={handleSave}>Save Changes</Button>
        </DialogFooter>
      </DialogContent>
    </Dialog>
  );
}
